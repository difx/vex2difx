#!/bin/env python

#**************************************************************************
#   Copyright (C) 2009 by Walter Brisken                                  *
#                                                                         *
#   This program is free software; you can redistribute it and/or modify  *
#   it under the terms of the GNU General Public License as published by  *
#   the Free Software Foundation; either version 3 of the License, or     *
#   (at your option) any later version.                                   *
#                                                                         *
#   This program is distributed in the hope that it will be useful,       *
#   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
#   GNU General Public License for more details.                          *
#                                                                         *
#   You should have received a copy of the GNU General Public License     *
#   along with this program; if not, write to the                         *
#   Free Software Foundation, Inc.,                                       *
#   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
#**************************************************************************

#===========================================================================
# SVN properties (DO NOT CHANGE)
#
# $Id$
# $HeadURL: $
# $LastChangedRevision$
# $Author$
# $LastChangedDate$
#
#============================================================================

from string import split, strip, find
from sys import exit, argv

program = 'oms2v2d'
version = '0.3'
verdate = '20090429'
author = 'Walter Brisken'

def usage(argv):
	print '\n%s ver. %s  %s  %s\n' % (program, version, author, verdate)
	print 'Program to take sched\'s .oms file and produce a skeleton .v2d file\n'
	print 'Usage: %s [options] <oms file>\n' % argv[0];
	print 'options can include\n'
	print '  --help'
	print '  -h       print this help info and quit\n'
	print '<oms file> is a .oms file produced by sched\n'


def readOMS(filename):
	data = open(filename).readlines()
	section = []
	current = {}
	n = 0;
	for D in data:
		n = n + 1
		d = strip(D)
		if(len(d) < 1):
			continue
		p = find(d, "=")
		if p < 0:
			key = '=COMMENT'
			value = strip(d)
		else:
			key = strip(d[0:p])
			if len(key) < 1:
				print 'Illegal line [%d] : %s' % (n, d)
				exit(0);
			value = strip(d[p+1:])
		if key == 'BEGIN':
			section.append( (value, current) )
			last = current
			current = {}
			if not last.has_key(value):
				last[value] = []
			last[value].append(current)
		elif key == 'END':
			if len(section) == 0:
				print 'Error: line %d unmatched END: %s' % (n, d)
				exit(0)
			oldvalue, current = section.pop()
			if oldvalue != value:
				print 'END with value %s does not match previous BEGIN with value %s, line %d' % (value, oldvalue, n)
				exit(0)
		else:
			if not current.has_key(key):
				current[key] = []
			for v in split(strip(value)):
				current[key].append(v)

	if len(section) > 0:
		print 'Error: unmatched BEGIN'
		exit(0);

	return current

def writev2d(oms, v2dFile):
	corr = oms['CORRELATOR_PARAMETERS'][0]

	out = open(v2dFile, 'w')

	nFFT = int(corr['FFT_SIZE'][0])
	specAvg = int(corr['SPECTRAL_AVERAGE'][0])
	if corr['POLARIZATION'] == 'NO':
		doPolar = 'False'
	else:
		doPolar = 'True'

	stations = []
	for s in oms['STATION_INFO']:
		stations.append(s['STATION_ID'][0])
	stations.sort()
	stnString = stations[0]
	for s in stations[1:]:
		stnString = stnString + ', ' + s

	out.write('# base .v2d file autogenerated by oms2v2d operating on file %s\n\n' % omsFile)
	out.write('vex = %s\n\n' % vexFile)
	out.write('antennas =%s\n\n' % stnString)

	for s in oms['SOURCE_INFO']:
		srcParams = ''
		if s.has_key('CAL_CODE'):
			if len(s['CAL_CODE']) > 0:
				c = s['CAL_CODE'][0]
				if len(c) > 0:
					srcParams = srcParams + ' calCode = ' + c
		out.write('SOURCE %s {%s }\n' % (s['SOURCE_NAME'][0], srcParams))
	out.write('\n')

	out.write('SETUP default\n')
	out.write('{\n')
	out.write('  tInt = %s\n' % corr['TIME_AVERAGE'][0])
	out.write('  nChan = %d\n' % (nFFT/(2*specAvg)))
	out.write('  doPolar = %s\n' % doPolar)
	out.write('}\n')
	out.close()

if len(argv) < 2:
	usage(argv)
	exit(0)

prefix = argv[1][0:-4]

omsFile = prefix + '.oms'
vexFile = prefix + '.skd.obs'
v2dFile = prefix + '.v2d'

if argv[1] == '-h' or argv[1] == '--help':
	usage(argv)
	exit(0)

if argv[1] != omsFile:
	print 'This program requries that the input file ends in .oms'
	exit(0)

oms = readOMS(omsFile)

writev2d(oms, v2dFile)
